// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _wrapped_HCD_filter_h_HH_
#define _wrapped_HCD_filter_h_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "HCD_filter_hw.h"
#include "pop_stream_4_5_5_s.h"
#include "wrapped_HCD_filteibs.h"
#include "wrapped_HCD_filtekbM.h"

namespace ap_rtl {

struct wrapped_HCD_filter_h : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > INPUT_STREAM_TDATA;
    sc_in< sc_logic > INPUT_STREAM_TVALID;
    sc_out< sc_logic > INPUT_STREAM_TREADY;
    sc_out< sc_lv<32> > OUTPUT_STREAM_TDATA;
    sc_out< sc_logic > OUTPUT_STREAM_TVALID;
    sc_in< sc_logic > OUTPUT_STREAM_TREADY;
    sc_out< sc_lv<4> > OUTPUT_STREAM_TKEEP;
    sc_out< sc_lv<4> > OUTPUT_STREAM_TSTRB;
    sc_out< sc_lv<4> > OUTPUT_STREAM_TUSER;
    sc_out< sc_lv<1> > OUTPUT_STREAM_TLAST;
    sc_out< sc_lv<5> > OUTPUT_STREAM_TID;
    sc_out< sc_lv<5> > OUTPUT_STREAM_TDEST;


    // Module declarations
    wrapped_HCD_filter_h(sc_module_name name);
    SC_HAS_PROCESS(wrapped_HCD_filter_h);

    ~wrapped_HCD_filter_h();

    sc_trace_file* mVcdFile;

    wrapped_HCD_filteibs* I_x_U;
    wrapped_HCD_filteibs* I_y_U;
    wrapped_HCD_filtekbM* output_img_U;
    HCD_filter_hw* grp_HCD_filter_hw_fu_222;
    pop_stream_4_5_5_s* grp_pop_stream_4_5_5_s_fu_229;
    sc_signal< sc_lv<11> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > grp_pop_stream_4_5_5_s_fu_229_INPUT_STREAM_TDATA_blk_n;
    sc_signal< sc_logic > INPUT_STREAM_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > OUTPUT_STREAM_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<9> > y_fu_243_p2;
    sc_signal< sc_lv<9> > y_reg_420;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<18> > zext_ln122_fu_257_p1;
    sc_signal< sc_lv<18> > zext_ln122_reg_425;
    sc_signal< sc_lv<1> > icmp_ln121_fu_237_p2;
    sc_signal< sc_lv<9> > x_fu_267_p2;
    sc_signal< sc_lv<9> > x_reg_433;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<18> > add_ln126_fu_277_p2;
    sc_signal< sc_lv<18> > add_ln126_reg_438;
    sc_signal< sc_lv<1> > icmp_ln122_fu_261_p2;
    sc_signal< sc_lv<9> > y_1_fu_292_p2;
    sc_signal< sc_lv<9> > y_1_reg_446;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<18> > zext_ln132_fu_306_p1;
    sc_signal< sc_lv<18> > zext_ln132_reg_451;
    sc_signal< sc_lv<1> > icmp_ln131_fu_286_p2;
    sc_signal< sc_lv<9> > x_1_fu_316_p2;
    sc_signal< sc_lv<9> > x_1_reg_459;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<18> > add_ln136_fu_326_p2;
    sc_signal< sc_lv<18> > add_ln136_reg_464;
    sc_signal< sc_lv<1> > icmp_ln132_fu_310_p2;
    sc_signal< sc_lv<9> > y_2_fu_341_p2;
    sc_signal< sc_lv<9> > y_2_reg_472;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<16> > shl_ln_fu_351_p3;
    sc_signal< sc_lv<16> > shl_ln_reg_477;
    sc_signal< sc_lv<1> > icmp_ln144_fu_335_p2;
    sc_signal< sc_lv<18> > zext_ln145_1_fu_367_p1;
    sc_signal< sc_lv<18> > zext_ln145_1_reg_482;
    sc_signal< sc_lv<9> > x_2_fu_381_p2;
    sc_signal< sc_lv<9> > x_2_reg_490;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > icmp_ln145_fu_375_p2;
    sc_signal< sc_lv<1> > e_last_V_fu_406_p2;
    sc_signal< sc_lv<1> > e_last_V_reg_500;
    sc_signal< sc_lv<16> > I_x_address0;
    sc_signal< sc_logic > I_x_ce0;
    sc_signal< sc_logic > I_x_we0;
    sc_signal< sc_lv<8> > I_x_q0;
    sc_signal< sc_lv<16> > I_y_address0;
    sc_signal< sc_logic > I_y_ce0;
    sc_signal< sc_logic > I_y_we0;
    sc_signal< sc_lv<8> > I_y_q0;
    sc_signal< sc_lv<16> > output_img_address0;
    sc_signal< sc_logic > output_img_ce0;
    sc_signal< sc_logic > output_img_we0;
    sc_signal< sc_lv<1> > output_img_q0;
    sc_signal< sc_logic > grp_HCD_filter_hw_fu_222_ap_start;
    sc_signal< sc_logic > grp_HCD_filter_hw_fu_222_ap_done;
    sc_signal< sc_logic > grp_HCD_filter_hw_fu_222_ap_idle;
    sc_signal< sc_logic > grp_HCD_filter_hw_fu_222_ap_ready;
    sc_signal< sc_lv<16> > grp_HCD_filter_hw_fu_222_I_x_address0;
    sc_signal< sc_logic > grp_HCD_filter_hw_fu_222_I_x_ce0;
    sc_signal< sc_lv<16> > grp_HCD_filter_hw_fu_222_I_y_address0;
    sc_signal< sc_logic > grp_HCD_filter_hw_fu_222_I_y_ce0;
    sc_signal< sc_lv<16> > grp_HCD_filter_hw_fu_222_output_img_address0;
    sc_signal< sc_logic > grp_HCD_filter_hw_fu_222_output_img_ce0;
    sc_signal< sc_logic > grp_HCD_filter_hw_fu_222_output_img_we0;
    sc_signal< sc_lv<1> > grp_HCD_filter_hw_fu_222_output_img_d0;
    sc_signal< sc_logic > grp_pop_stream_4_5_5_s_fu_229_ap_start;
    sc_signal< sc_logic > grp_pop_stream_4_5_5_s_fu_229_ap_done;
    sc_signal< sc_logic > grp_pop_stream_4_5_5_s_fu_229_ap_idle;
    sc_signal< sc_logic > grp_pop_stream_4_5_5_s_fu_229_ap_ready;
    sc_signal< sc_logic > grp_pop_stream_4_5_5_s_fu_229_INPUT_STREAM_TREADY;
    sc_signal< sc_lv<8> > grp_pop_stream_4_5_5_s_fu_229_ap_return;
    sc_signal< sc_lv<9> > y_0_reg_156;
    sc_signal< sc_lv<9> > x_0_reg_167;
    sc_signal< sc_lv<9> > y1_0_reg_178;
    sc_signal< sc_lv<9> > x2_0_reg_189;
    sc_signal< sc_lv<9> > y5_0_reg_200;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<9> > x6_0_reg_211;
    sc_signal< sc_logic > grp_HCD_filter_hw_fu_222_ap_start_reg;
    sc_signal< sc_lv<64> > zext_ln126_1_fu_282_p1;
    sc_signal< sc_lv<64> > zext_ln136_1_fu_331_p1;
    sc_signal< sc_lv<64> > zext_ln147_1_fu_401_p1;
    sc_signal< sc_lv<17> > tmp_2_fu_249_p3;
    sc_signal< sc_lv<18> > zext_ln126_fu_273_p1;
    sc_signal< sc_lv<17> > tmp_4_fu_298_p3;
    sc_signal< sc_lv<18> > zext_ln136_fu_322_p1;
    sc_signal< sc_lv<8> > trunc_ln146_fu_347_p1;
    sc_signal< sc_lv<17> > tmp_6_fu_359_p3;
    sc_signal< sc_lv<16> > zext_ln145_fu_371_p1;
    sc_signal< sc_lv<18> > zext_ln147_fu_392_p1;
    sc_signal< sc_lv<18> > add_ln147_fu_396_p2;
    sc_signal< sc_lv<16> > idx_fu_387_p2;
    sc_signal< sc_lv<11> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<11> ap_ST_fsm_state1;
    static const sc_lv<11> ap_ST_fsm_state2;
    static const sc_lv<11> ap_ST_fsm_state3;
    static const sc_lv<11> ap_ST_fsm_state4;
    static const sc_lv<11> ap_ST_fsm_state5;
    static const sc_lv<11> ap_ST_fsm_state6;
    static const sc_lv<11> ap_ST_fsm_state7;
    static const sc_lv<11> ap_ST_fsm_state8;
    static const sc_lv<11> ap_ST_fsm_state9;
    static const sc_lv<11> ap_ST_fsm_state10;
    static const sc_lv<11> ap_ST_fsm_state11;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<9> ap_const_lv9_100;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<16> ap_const_lv16_FFFF;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_INPUT_STREAM_TDATA_blk_n();
    void thread_INPUT_STREAM_TREADY();
    void thread_I_x_address0();
    void thread_I_x_ce0();
    void thread_I_x_we0();
    void thread_I_y_address0();
    void thread_I_y_ce0();
    void thread_I_y_we0();
    void thread_OUTPUT_STREAM_TDATA();
    void thread_OUTPUT_STREAM_TDATA_blk_n();
    void thread_OUTPUT_STREAM_TDEST();
    void thread_OUTPUT_STREAM_TID();
    void thread_OUTPUT_STREAM_TKEEP();
    void thread_OUTPUT_STREAM_TLAST();
    void thread_OUTPUT_STREAM_TSTRB();
    void thread_OUTPUT_STREAM_TUSER();
    void thread_OUTPUT_STREAM_TVALID();
    void thread_add_ln126_fu_277_p2();
    void thread_add_ln136_fu_326_p2();
    void thread_add_ln147_fu_396_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_e_last_V_fu_406_p2();
    void thread_grp_HCD_filter_hw_fu_222_ap_start();
    void thread_grp_pop_stream_4_5_5_s_fu_229_ap_start();
    void thread_icmp_ln121_fu_237_p2();
    void thread_icmp_ln122_fu_261_p2();
    void thread_icmp_ln131_fu_286_p2();
    void thread_icmp_ln132_fu_310_p2();
    void thread_icmp_ln144_fu_335_p2();
    void thread_icmp_ln145_fu_375_p2();
    void thread_idx_fu_387_p2();
    void thread_output_img_address0();
    void thread_output_img_ce0();
    void thread_output_img_we0();
    void thread_shl_ln_fu_351_p3();
    void thread_tmp_2_fu_249_p3();
    void thread_tmp_4_fu_298_p3();
    void thread_tmp_6_fu_359_p3();
    void thread_trunc_ln146_fu_347_p1();
    void thread_x_1_fu_316_p2();
    void thread_x_2_fu_381_p2();
    void thread_x_fu_267_p2();
    void thread_y_1_fu_292_p2();
    void thread_y_2_fu_341_p2();
    void thread_y_fu_243_p2();
    void thread_zext_ln122_fu_257_p1();
    void thread_zext_ln126_1_fu_282_p1();
    void thread_zext_ln126_fu_273_p1();
    void thread_zext_ln132_fu_306_p1();
    void thread_zext_ln136_1_fu_331_p1();
    void thread_zext_ln136_fu_322_p1();
    void thread_zext_ln145_1_fu_367_p1();
    void thread_zext_ln145_fu_371_p1();
    void thread_zext_ln147_1_fu_401_p1();
    void thread_zext_ln147_fu_392_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
